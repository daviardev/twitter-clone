import Head from 'next/head'
import { useRouter } from 'next/router'
import { useState, useEffect, useContext } from 'react'

import { getSession } from 'next-auth/react'

import { AppContext } from 'context/AppContext'

import Posts from 'components/Posts'
import Modal from 'components/Modal'
import Widget from 'components/Widget'
import Comment from 'components/Comment'
import Sidebar from 'components/Sidebar'

import { db } from 'firebase/client'
import { onSnapshot, collection, query, orderBy, doc } from 'firebase/firestore'

import { BsArrowLeft } from 'react-icons/bs'

const PostPage = () => {
  const [post, setPost] = useState([])
  const [comments, setComments] = useState([])

  const [appContext] = useContext(AppContext)

  const router = useRouter()
  const { id } = router.query

  // Lista y carga los comentarios
  useEffect(() => onSnapshot(query(collection(db, 'posts', id, 'comments'), orderBy('createdAt', 'desc')),
    snapshot => setComments(snapshot.docs)
  ), [db, id])

  // Carga el twit indicado del id especificado
  useEffect(() =>
    onSnapshot(doc(db, 'posts', id), snapshot => {
      setPost(snapshot.data())
    }), [db])

  return (
    <div>
      <Head>
        <title>{post?.username} on Twitter: "{post?.text}"</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.png' />
      </Head>
      <main className='bg-black min-h-screen flex max-w-[1500px] mx-auto'>
        <Sidebar />
        <div className='flex-grow border-l border-r border-gray-700 max-w-2xl sm:ml-[73px] xl:ml-[370px]'>
          <div className='flex items-center px-1.5 py-2 border-b border-gray-700 text-[#d9d9d9] font-semibold text-xl gap-x-4 sticky top-0 z-50 bg-[#000000aa] backdrop-blur'>
            <div
              className='hoverAnimation w-9 h-9 flex items-center justify-center xl:px-0'
              onClick={() => router.push('/')}
            >
              <BsArrowLeft className='h-5 text-white' />
            </div>
            Tweet
          </div>
          <Posts
            id={id}
            post={post}
          />

          <div className='border-t border-gray-700'>
            {comments.length > 0 && (
              <div className='pb-72'>
                {comments.map((comment) => (
                  <Comment
                    key={comment.id}
                    id={comment.id}
                    comment={comment.data()}
                  />
                ))}
              </div>
            )}
          </div>
          {appContext?.isModalOpen && <Modal />}
        </div>
        <Widget />
      </main>
    </div>
  )
}

export default PostPage

export async function getServerSideProps (context) {
  const session = await getSession(context)

  return {
    props: {
      session
    }
  }
}
